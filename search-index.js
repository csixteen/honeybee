var searchIndex = JSON.parse('{\
"honeybee":{"doc":"<code>honeybee</code> is a port of i3status, written in Rust. It means â€¦","t":[3,11,11,0,11,11,0,11,11,0,12,0,11,0,11,11,11,14,11,11,14,0,14,12,12,0,0,0,12,0,11,11,11,0,0,11,11,0,0,3,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,12,13,3,4,8,13,6,8,8,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,13,3,13,13,6,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,4,0,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,13,11,11,0,13,11,11,11,11,11,11,11,11,12,12,12,13,4,3,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,0,0,10,10,0,11,0,5,11,10,11,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,4,3,4,13,3,3,13,4,13,13,13,13,13,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,11,11,11,11,11,11,12,12,12,11,11,12,12,11,11,11,11,11,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,4,13,13,13,13,13,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CliArgs","augment_args","augment_args_for_update","bar","borrow","borrow_mut","bridge","command","command_for_update","config","config_file","errors","fmt","formatting","from","from_arg_matches","from_arg_matches_mut","from_str","group_id","into","map","modules","modules","no_colors","num_threads","output","pango","protocol","run_once","timer","try_from","try_into","type_id","types","units","update_from_arg_matches","update_from_arg_matches_mut","utils","widget","Bar","I3Block","None","RenderedWidget","Text","add_module","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","eq","equivalent","fmt","fmt","from","from","into","into","new","run","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Bridge","Request","SetWidget","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","into","into","new","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","id","widget","Config","GeneralConfig","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","color_bad","color_degraded","color_good","color_separator","colors","default","default","deserialize","deserialize","eq","equivalent","fmt","fmt","from","from","general","into","into","markup","modules","output_format","separator","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_interval","Configuration","Error","ErrorKind","OptionExt","Other","Result","ResultExt","StdError","ToSerdeError","borrow","borrow","borrow_mut","borrow_mut","cause","clone","clone","clone_into","clone_into","description","downcast","downcast","downcast","downcast_mut","downcast_mut","downcast_mut","downcast_ref","downcast_ref","downcast_ref","eq","equivalent","error","error","error","fmt","fmt","fmt","fmt","from","from","into","into","is","is","is","kind","message","new","or_error","or_error","or_error","provide","provide","request_ref","request_ref","request_ref","request_value","request_value","request_value","serde_error","serde_error","source","source","sources","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","with_source","Byte","Format","Icon","Percentage","Placeholders","Text","Value","borrow","borrow","borrow_mut","borrow_mut","byte","clone","clone","clone_into","clone_into","default","deserialize","eq","eq","equivalent","fmt","fmt","fmt","from","from","from_str","full_text","into","into","new","percentage","render","short_text","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","with_default","with_defaults","decimals","unit","value","Module","ModuleConfig","battery","battery","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","fmt","fmt","from","from","into","into","memory","memory","new","run","time","time","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","config","config","config","Charging","ChargingStatus","Config","Discharging","Full","Percentage","ThresholdType","Time","Unknown","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","deserialize","deserialize","eq","eq","eq","equivalent","fmt","fmt","fmt","format","format_down","from","from","from","from","into","into","into","low_threshold","number","path","status_bat","status_chr","status_full","status_unk","threshold_type","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Config","borrow","borrow_mut","clone","clone_into","default","deserialize","eq","fmt","from","into","to_owned","try_from","try_into","type_id","Config","borrow","borrow_mut","clone","clone_into","default","deserialize","eq","fmt","from","into","to_owned","try_from","try_into","type_id","OutputFormatter","color","dzen2","fg_color","full_text","i3bar","init","lemonbar","output_formatter","render_widget","status_line","stop","term","xmobar","Color","borrow","borrow_mut","clone","clone_into","default","deserialize","eq","equivalent","fmt","fmt","from","into","new","serialize","to_owned","to_string","try_from","try_from","try_into","type_id","Dzen2","borrow","borrow_mut","clone","clone_into","eq","equivalent","fg_color","fmt","from","full_text","into","status_line","to_owned","try_from","try_into","type_id","I3Bar","borrow","borrow_mut","clone","clone_into","eq","equivalent","fg_color","fmt","from","full_text","init","into","render_widget","status_line","stop","to_owned","try_from","try_into","type_id","LemonBar","borrow","borrow_mut","clone","clone_into","eq","equivalent","fg_color","fmt","from","full_text","into","status_line","to_owned","try_from","try_into","type_id","Term","borrow","borrow_mut","clone","clone_into","eq","equivalent","fg_color","fmt","from","full_text","init","into","status_line","to_owned","try_from","try_into","type_id","XmoBar","borrow","borrow_mut","clone","clone_into","eq","equivalent","fg_color","fmt","from","full_text","into","status_line","to_owned","try_from","try_into","type_id","PangoEscapeExt","escape_pango_format","Alignment","Block","BlockWidth","Center","ClickEvent","Header","Left","Markup","None","Pango","Pixels","Right","Text","align","background","border","border_bottom","border_left","border_right","border_top","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","default","default","default","default","default","deserialize","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","full_text","init","instance","into","into","into","into","into","into","markup","min_width","name","new","new","separator","separator_block_width","serialize","serialize","serialize","serialize","serialize","short_text","status_line","stop","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","urgent","Timer","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","new","start","to_owned","try_from","try_into","type_id","BoxedFuture","Auto","B","GiB","KiB","MiB","TiB","Unit","borrow","borrow_mut","clone","clone_into","convert_to_bytes","default","deserialize","eq","equivalent","fmt","fmt","from","from_bytes","into","to_owned","to_string","try_from","try_from","try_from","try_into","type_id","buffered_reader","get_config_path","read_toml_config","ContentType","Critical","Format","None","Normal","Text","Warning","Widget","WidgetState","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","content","default","default","default","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","into","into","into","state","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["honeybee","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","honeybee::bar","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","honeybee::bridge","","","","","","","","","","","","","","","","","","","","","","","","","","honeybee::bridge::Request","","honeybee::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","honeybee::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","honeybee::formatting","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","honeybee::formatting::Value","","","honeybee::modules","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","honeybee::modules::ModuleConfig","","","honeybee::modules::battery","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","honeybee::modules::memory","","","","","","","","","","","","","","","honeybee::modules::time","","","","","","","","","","","","","","","honeybee::output","","","","","","","","","","","","","","honeybee::output::color","","","","","","","","","","","","","","","","","","","","","honeybee::output::dzen2","","","","","","","","","","","","","","","","","honeybee::output::i3bar","","","","","","","","","","","","","","","","","","","","honeybee::output::lemonbar","","","","","","","","","","","","","","","","","honeybee::output::term","","","","","","","","","","","","","","","","","","honeybee::output::xmobar","","","","","","","","","","","","","","","","","honeybee::pango","","honeybee::protocol","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","honeybee::timer","","","","","","","","","","","","","","","honeybee::types","honeybee::units","","","","","","","","","","","","","","","","","","","","","","","","","","","","honeybee::utils","","","honeybee::widget","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A port of i3status, written in Rust.","","","This is the main container of all the running modules.","","","Establishes the communication between individual modules â€¦","","","","If an absolute path is provided, then it shall be used â€¦","","","Everything related to format strings, placeholders and â€¦","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","Indicates whether colors will be disabled or not.","Maximum number of blocking threads used by honeybee.","The <code>output_format</code> configuration defines the format strings â€¦","","i3bar protocol. For full reference, check the main â€¦","Indicates whether honeybee will stop after the first â€¦","Used to control the update interval of modules.","","","","","","","","Utilities, mostly to manipulate files.","Structs and methods to manipulate widgets. A <code>Widget</code> is a â€¦","","","","A rendered widget can be simply a string or an i3 Block.","","","","","","","","","Return <code>RenderedWidget::None</code>","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","These are the values that youâ€™ll find/specify at the â€¦","","","","","","","","","","","","","","Return â€¦","Return â€¦","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","<code>Error</code> is a trait representing the basic expectations for â€¦","","","","","","","","","","","","Attempts to downcast the box to a concrete type.","Attempts to downcast the box to a concrete type.","Attempts to downcast the box to a concrete type.","Returns some mutable reference to the inner value if it is â€¦","Forwards to the method defined on the type <code>dyn Error</code>.","Forwards to the method defined on the type <code>dyn Error</code>.","Returns some reference to the inner value if it is of type â€¦","Forwards to the method defined on the type <code>dyn Error</code>.","Forwards to the method defined on the type <code>dyn Error</code>.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the inner type is the same as <code>T</code>.","Forwards to the method defined on the type <code>dyn Error</code>.","Forwards to the method defined on the type <code>dyn Error</code>.","","","","","","","","Provides type based access to context intended for error â€¦","Request a reference of type <code>T</code> as context about this error.","Request a reference of type <code>T</code> as context about this error.","Request a reference of type <code>T</code> as context about this error.","Request a value of type <code>T</code> as context about this error.","Request a value of type <code>T</code> as context about this error.","Request a value of type <code>T</code> as context about this error.","","","The lower-level source of this error, if any.","","Returns an iterator starting with the current error and â€¦","","","","","","","","","","","","","Format strings for <code>full_text</code> and <code>short_text</code>.","","","Maps specific placeholders to the corresponding values. â€¦","","","","","","","","","","","","Return â€¦","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Replaces the placeholders with the corresponding values in â€¦","","","","","","","","","","","","","","","","","","Gets the status (charging, discharging, unknown, full), â€¦","","","","","","","","","","Return <code>Module</code>","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Memory usage on a Linux system from /proc/meminfo.","","","","Outputs the current time in the local timezone, if <code>timezone</code>â€¦","","","","","","","","","","","","","","Represents the operating status. Corresponds to â€¦","","","","","","","","","","","","","","","","","","","","Return <code>ChargingStatus::Discharging</code>","Return <code>ThresholdType::Percentage</code>","Return â€¦","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Return â€¦","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Return â€¦","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Everything needed to manipulate colors.","Dzen is a general purpose messaging, notification and â€¦","","","i3bar output format","","lemonbar is a lightweight bar based entirely on XCB. It â€¦","","","","","Use ANSI Escape sequences to produce a terminal-output as â€¦","xmobar is a minimalistic, mostly text based, status bar. â€¦","A color is a string representing a canonical RGB â€¦","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Represents the contents of the status line for a â€¦","","","","The first message in the protocol is a header block.","","","","","","","The width of the text will determine the block width in â€¦","Aligns the text on the center, left or right, when the â€¦","Overrides the background color for this particular block.","Overrides the border color for this particular block.","Defines the width (in pixels) of the bottom border of this â€¦","Defines the width (in pixels) of the left border of this â€¦","Defines the width (in pixels) of the right border of this â€¦","Defines the width (in pixels) of the top border of this â€¦","","","","","","","","","","","","","","","","","","","","","","","","","The color used to display the contents of <code>full_text</code> or â€¦","Return â€¦","Return <code>Alignment::Left</code>","Return <code>Markup::Pango</code>","Return â€¦","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","This is the only required key by the protocol. If itâ€™s â€¦","","In case there are multiple instances of a block (e.g. â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Indicates how the block should be parsed.","The minimum width, in pixels, of this block. If <code>full_text</code> â€¦","Unique name of this block, used to identify it in scripts â€¦","","","Indicates whether a separator line should be drawn after â€¦","Amount of pixels to leave blank after the block. Unless â€¦","","","","","","If provided, the <code>short_text</code> will be used when the status â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","Specifies whether the current value is urgent (e.g. no â€¦","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Return <code>Unit::Auto</code>","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","If <code>file</code> is an absolute path and the file exists, then its â€¦","","","","","","","","","The graphical element that is used to render the output of â€¦","The state of the widget will define its color value, which â€¦","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,2,2,0,2,2,0,2,2,0,2,0,2,0,2,2,2,0,2,2,0,0,0,2,2,0,0,0,2,0,2,2,2,0,0,2,2,0,0,0,14,14,0,14,11,11,14,11,14,14,14,14,14,14,11,14,11,14,11,14,11,11,14,11,14,11,14,11,14,0,0,18,17,18,17,18,17,18,17,18,17,18,17,18,17,18,17,17,18,17,18,17,18,17,18,74,74,0,0,22,16,22,16,22,16,22,16,16,16,16,16,16,22,16,22,16,16,16,22,16,22,16,22,22,16,16,22,16,16,22,16,22,16,22,16,22,16,16,25,0,0,0,25,0,0,0,0,24,25,24,25,23,24,25,24,25,23,23,23,23,23,23,23,23,23,23,25,25,75,76,13,24,24,25,25,24,25,24,25,23,23,23,24,24,24,75,76,13,24,23,23,23,23,23,23,23,77,13,23,24,23,24,25,24,25,24,25,24,25,24,25,24,40,0,40,40,0,40,0,41,40,41,40,40,41,40,41,40,41,41,41,40,41,41,40,40,41,40,41,41,41,40,41,40,41,41,41,40,40,41,40,41,40,41,40,41,41,78,78,78,0,0,0,12,43,12,43,12,43,12,43,12,43,12,43,12,43,12,43,12,0,12,43,12,0,12,43,12,43,12,43,12,43,12,79,80,81,45,0,0,45,45,46,0,46,45,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,46,47,45,46,47,45,45,46,47,47,47,45,45,46,47,45,46,47,47,47,47,47,47,47,47,47,45,46,47,45,46,47,45,46,47,45,46,47,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,51,51,0,51,0,0,51,51,51,0,0,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,82,0,0,0,62,0,0,62,0,63,63,61,62,61,64,64,64,64,64,64,64,60,61,62,63,64,65,60,61,62,63,64,65,60,61,62,63,64,65,60,61,62,63,64,65,64,60,62,63,64,65,63,60,61,62,63,64,65,60,61,62,63,64,65,60,61,62,63,64,65,60,61,62,63,64,65,64,0,64,60,61,62,63,64,65,64,64,64,60,64,64,64,60,61,62,63,64,64,0,0,60,61,62,63,64,65,60,61,62,63,64,65,60,61,62,63,64,65,60,61,62,63,64,65,64,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,39,39,39,39,39,39,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,72,73,73,72,73,72,0,0,50,72,73,50,72,73,50,72,73,50,72,73,50,50,72,73,72,73,72,50,72,73,73,50,72,73,50,72,73,50,50,72,73,73,50,72,73,50,72,73,50,72,73],"f":[0,[1,1],[1,1],0,[[]],[[]],0,[[],1],[[],1],0,0,0,[[2,3],4],0,[[]],[5,[[7,[2,6]]]],[5,[[7,[2,6]]]],0,[[],[[9,[8]]]],[[]],0,0,0,0,0,0,0,0,0,0,[[],7],[[],7],[[],10],0,0,[[2,5],[[7,[6]]]],[[2,5],[[7,[6]]]],0,0,0,0,0,0,0,[[11,12],13],[[]],[[]],[[]],[[]],[14,14],[[]],[[],14],[[14,14],15],[[],15],[[11,3],4],[[14,3],4],[[]],[[]],[[]],[[]],[16,11],[[11,15],13],[[]],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],0,0,0,[[]],[[]],[[]],[[]],[17,17],[18,18],[[]],[[]],[[17,3],4],[[18,3],4],[[]],[[]],[[]],[[]],[[19,[20,[18]],21],17],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],0,0,0,0,[[]],[[]],[[]],[[]],[22,22],[16,16],[[]],[[]],0,0,0,0,0,[[],22],[[],16],[[],[[7,[22]]]],[[],[[7,[16]]]],[[16,16],15],[[],15],[[22,3],4],[[16,3],4],[[]],[[]],0,[[]],[[]],0,0,0,0,[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[9,[23]]]],[24,24],[25,25],[[]],[[]],[[],26],[[[28,[23,27]]],[[7,[[28,[27]],[28,[23,27]]]]]],[[[28,[23,27]]],[[7,[[28,[27]],[28,[23,27]]]]]],[[[28,[23,27]]],[[7,[[28,[27]],[28,[23,27]]]]]],[23,9],[23,9],[23,9],[23,9],[23,9],[23,9],[[25,25],15],[[],15],[[[30,[[29,[26]]]]],13],[[[30,[[29,[26]]]]],13],[[[13,[[0,[23,31,32]]]],[30,[[29,[26]]]]],13],[[24,3],4],[[24,3],4],[[25,3],4],[[25,3],4],[[]],[[]],[[]],[[]],[23,15],[23,15],[23,15],0,0,[[[30,[[29,[26]]]]],24],[33,13],[33,13],[[[13,[[0,[23,31,32]]]],33],13],[34],[34],[23,9],[23,9],[23,9],[23,9],[23,9],[23,9],[[],[[13,[35]]]],[13,[[13,[35]]]],[[],[[9,[23]]]],0,[23,36],[[]],[[]],[[],37],[[],37],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[24,[38,[23]]],24],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[21,39,19],40],[41,41],[40,40],[[]],[[]],[[],41],[[],[[13,[41]]]],[[41,41],15],[[40,40],15],[[],15],[[41,3],4],[[40,3],4],[[40,3],4],[[]],[[]],[26,[[7,[41]]]],0,[[]],[[]],[[],41],[42,40],[[41,9]],0,[[]],[[]],[[],37],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[41,26],41],[[41,26,26],41],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[43,43],[12,12],[[]],[[]],[[],43],[[],[[7,[12]]]],[[43,3],4],[[12,3],4],[[]],[[]],[[]],[[]],0,0,[[],43],[[12,17],[[44,[13]]]],0,0,[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[45,45],[46,46],[47,47],[[]],[[]],[[]],[[],45],[[],46],[[],47],[[],[[7,[46]]]],[[],[[7,[47]]]],[[45,45],15],[[46,46],15],[[47,47],15],[[],15],[[45,3],4],[[46,3],4],[[47,3],4],0,0,[[]],[26,45],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],0,[[]],[[]],[48,48],[[]],[[],48],[[],[[7,[48]]]],[[48,48],15],[[48,3],4],[[]],[[]],[[]],[[],7],[[],7],[[],10],0,[[]],[[]],[49,49],[[]],[[],49],[[],[[7,[49]]]],[[49,49],15],[[49,3],4],[[]],[[]],[[]],[[],7],[[],7],[[],10],0,0,0,[[16,50],37],[[16,50],37],0,[[]],0,[26,[[38,[51]]]],[[16,50],14],[[]],[[]],0,0,0,[[]],[[]],[52,52],[[]],[[],52],[[],[[13,[52]]]],[[52,52],15],[[],15],[[52,3],4],[[52,3],4],[[]],[[]],[[],52],[52,7],[[]],[[],37],[26,[[13,[52]]]],[[],7],[[],7],[[],10],0,[[]],[[]],[53,53],[[]],[[53,53],15],[[],15],[[53,16,50],37],[[53,3],4],[[]],[[53,16,50],37],[[]],[53],[[]],[[],7],[[],7],[[],10],0,[[]],[[]],[54,54],[[]],[[54,54],15],[[],15],[[54,16,50],37],[[54,3],4],[[]],[[54,16,50],37],[54],[[]],[[54,16,50],14],[54],[54],[[]],[[],7],[[],7],[[],10],0,[[]],[[]],[55,55],[[]],[[55,55],15],[[],15],[[55,16,50],37],[[55,3],4],[[]],[[55,16,50],37],[[]],[55],[[]],[[],7],[[],7],[[],10],0,[[]],[[]],[56,56],[[]],[[56,56],15],[[],15],[[56,16,50],37],[[56,3],4],[[]],[[56,16,50],37],[56],[[]],[56],[[]],[[],7],[[],7],[[],10],0,[[]],[[]],[57,57],[[]],[[57,57],15],[[],15],[[57,16,50],37],[[57,3],4],[[]],[[57,16,50],37],[[]],[57],[[]],[[],7],[[],7],[[],10],0,[[],[[0,[58,59]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],60],[[],62],[[],63],[[],64],[[],65],[[],[[7,[63]]]],[[60,60],15],[[61,61],15],[[62,62],15],[[63,63],15],[[64,64],15],[[65,65],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[60,3],4],[[61,3],4],[[62,3],4],[[63,3],4],[[64,3],4],[[65,3],4],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],60],[37,64],0,0,[60,7],[61,7],[62,7],[63,7],[64,7],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[[]],[[]],[66,66],[[]],[[],66],[[66,3],4],[[]],[[]],[21,66],[66,67],[[]],[[],7],[[],7],[[],10],0,0,0,0,0,0,0,0,[[]],[[]],[39,39],[[]],[[21,39],21],[[],39],[[],[[7,[39]]]],[[39,39],15],[[],15],[[39,3],4],[[39,3],4],[[]],[[21,39],42],[[]],[[]],[[],37],[[],7],[68,[[7,[39]]]],[26,[[7,[39]]]],[[],7],[[],10],[[],[[13,[[70,[69]]]]]],[26,[[9,[71]]]],[[],13],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[50,50],[72,72],[73,73],[[]],[[]],[[]],0,[[],50],[[],72],[[],73],[[72,72],15],[[73,73],15],[[],15],[[50,3],4],[[72,3],4],[[73,3],4],[[73,3],4],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[],37],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10]],"p":[[3,"Command"],[3,"CliArgs"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"TypeId"],[3,"Bar"],[4,"ModuleConfig"],[6,"Result"],[4,"RenderedWidget"],[15,"bool"],[3,"GeneralConfig"],[3,"Bridge"],[4,"Request"],[15,"usize"],[3,"Sender"],[15,"u64"],[3,"Config"],[8,"StdError"],[3,"Error"],[4,"ErrorKind"],[15,"str"],[3,"Global"],[3,"Box"],[4,"Cow"],[8,"Into"],[8,"Send"],[8,"Sync"],[8,"FnOnce"],[3,"Demand"],[8,"Error"],[3,"Source"],[3,"String"],[3,"Arc"],[4,"Unit"],[4,"Value"],[3,"Format"],[15,"f64"],[3,"Module"],[6,"BoxedFuture"],[4,"ChargingStatus"],[4,"ThresholdType"],[3,"Config"],[3,"Config"],[3,"Config"],[3,"Widget"],[8,"OutputFormatter"],[3,"Color"],[3,"Dzen2"],[3,"I3Bar"],[3,"LemonBar"],[3,"Term"],[3,"XmoBar"],[8,"Write"],[8,"Default"],[3,"Header"],[4,"BlockWidth"],[4,"Alignment"],[4,"Markup"],[3,"Block"],[3,"ClickEvent"],[3,"Timer"],[3,"Interval"],[15,"char"],[3,"File"],[3,"BufReader"],[3,"PathBuf"],[4,"WidgetState"],[4,"ContentType"],[13,"SetWidget"],[8,"ResultExt"],[8,"OptionExt"],[8,"ToSerdeError"],[13,"Byte"],[13,"battery"],[13,"memory"],[13,"time"],[8,"PangoEscapeExt"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
