var searchIndex = JSON.parse('{\
"honeybee":{"doc":"","t":[3,11,11,0,11,11,11,11,0,12,0,11,11,11,11,11,11,14,0,12,12,12,11,11,11,11,11,0,3,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,12,13,3,4,8,13,6,8,8,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,10,11,11,11,11,11,11,11,11,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,12,5,5],"n":["CliArgs","augment_args","augment_args_for_update","bar","borrow","borrow_mut","command","command_for_update","config","config_file","errors","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","map","modules","no_colors","num_threads","run_once","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","utils","Bar","I3Block","None","RenderedWidget","Text","add_module","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","eq","equivalent","fmt","fmt","from","from","into","into","new","run","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Config","GeneralConfig","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","color_bad","color_degraded","color_good","color_separator","colors","default","default","deserialize","deserialize","eq","equivalent","fmt","fmt","from","from","general","into","into","markup","modules","output_format","separator","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_interval","Configuration","Error","ErrorKind","OptionExt","Other","Result","ResultExt","StdError","ToSerdeError","borrow","borrow","borrow_mut","borrow_mut","cause","clone","clone","clone_into","clone_into","description","downcast","downcast","downcast","downcast_mut","downcast_mut","downcast_mut","downcast_ref","downcast_ref","downcast_ref","eq","equivalent","error","error","error","fmt","fmt","fmt","fmt","from","from","into","into","is","is","is","kind","message","new","or_error","provide","provide","request_ref","request_ref","request_ref","request_value","request_value","request_value","serde_error","serde_error","source","source","sources","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Module","ModuleConfig","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","fmt","fmt","from","from","into","into","memory","new","run","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","config","get_config_path","read_toml_config"],"q":["honeybee","","","","","","","","","","","","","","","","","","","","","","","","","","","","honeybee::bar","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","honeybee::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","honeybee::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","honeybee::modules","","","","","","","","","","","","","","","","","","","","","","","","","","","","","honeybee::modules::ModuleConfig","honeybee::utils",""],"d":["A port of the original i3status(1) written in Rust. This …","","","","","","","","","If an absolute path is provided, then it shall be used …","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","Indicates whether colors will be disabled or not.","Maximum number of blocking threads used by honeybee.","Indicates whether honeybee will stop after the first …","","","","","","","","","","","","","","","","","","","Return <code>RenderedWidget::None</code>","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Return …","Return …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","<code>Error</code> is a trait representing the basic expectations for …","","","","","","","","","","","","Attempts to downcast the box to a concrete type.","Attempts to downcast the box to a concrete type.","Attempts to downcast the box to a concrete type.","Forwards to the method defined on the type <code>dyn Error</code>.","Returns some mutable reference to the inner value if it is …","Forwards to the method defined on the type <code>dyn Error</code>.","Returns some reference to the inner value if it is of type …","Forwards to the method defined on the type <code>dyn Error</code>.","Forwards to the method defined on the type <code>dyn Error</code>.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Forwards to the method defined on the type <code>dyn Error</code>.","Returns <code>true</code> if the inner type is the same as <code>T</code>.","Forwards to the method defined on the type <code>dyn Error</code>.","","","","","","Provides type based access to context intended for error …","Request a reference of type <code>T</code> as context about this error.","Request a reference of type <code>T</code> as context about this error.","Request a reference of type <code>T</code> as context about this error.","Request a value of type <code>T</code> as context about this error.","Request a value of type <code>T</code> as context about this error.","Request a value of type <code>T</code> as context about this error.","","","The lower-level source of this error, if any.","","Returns an iterator starting with the current error and …","","","","","","","","","","","","","","","","","","","","","Return <code>Module</code>","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","This will try to find the config file path in the following",""],"i":[0,2,2,0,2,2,2,2,0,2,0,2,2,2,2,2,2,0,0,2,2,2,2,2,2,2,2,0,0,14,14,0,14,11,11,14,11,14,14,14,14,14,14,11,14,11,14,11,14,11,11,14,11,14,11,14,11,14,0,0,17,16,17,16,17,16,17,16,16,16,16,16,16,17,16,17,16,16,16,17,16,17,16,17,17,16,16,17,16,16,17,16,17,16,17,16,17,16,16,20,0,0,0,20,0,0,0,0,19,20,19,20,18,19,20,19,20,18,18,18,18,18,18,18,18,18,18,20,20,37,38,13,19,19,20,20,19,20,19,20,18,18,18,19,19,19,38,19,18,18,18,18,18,18,18,39,13,18,19,18,19,20,19,20,19,20,19,20,19,20,0,0,33,12,33,12,33,12,33,12,33,12,33,12,33,12,33,12,12,33,12,33,12,33,12,33,12,33,12,40,0,0],"f":[0,[1,1],[1,1],0,[[]],[[]],[[],1],[[],1],0,0,0,[[2,3],4],[[]],[5,[[7,[2,6]]]],[5,[[7,[2,6]]]],[[],[[9,[8]]]],[[]],0,0,0,0,0,[[],7],[[],7],[[],10],[[2,5],[[7,[6]]]],[[2,5],[[7,[6]]]],0,0,0,0,0,0,[[11,12],13],[[]],[[]],[[]],[[]],[14,14],[[]],[[],14],[[14,14],15],[[],15],[[11,3],4],[[14,3],4],[[]],[[]],[[]],[[]],[16,11],[[11,15],13],[[]],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],0,0,[[]],[[]],[[]],[[]],[17,17],[16,16],[[]],[[]],0,0,0,0,0,[[],17],[[],16],[[],[[7,[17]]]],[[],[[7,[16]]]],[[16,16],15],[[],15],[[17,3],4],[[16,3],4],[[]],[[]],0,[[]],[[]],0,0,0,0,[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[9,[18]]]],[19,19],[20,20],[[]],[[]],[[],21],[[[23,[18,22]]],[[7,[[23,[22]],[23,[18,22]]]]]],[[[23,[18,22]]],[[7,[[23,[22]],[23,[18,22]]]]]],[[[23,[18,22]]],[[7,[[23,[22]],[23,[18,22]]]]]],[18,9],[18,9],[18,9],[18,9],[18,9],[18,9],[[20,20],15],[[],15],[[[25,[[24,[21]]]]],13],[[[25,[[24,[21]]]]],13],[[[13,[[0,[18,26,27]]]],[25,[[24,[21]]]]],13],[[19,3],4],[[19,3],4],[[20,3],4],[[20,3],4],[[]],[[]],[[]],[[]],[18,15],[18,15],[18,15],0,0,[[[25,[[24,[21]]]]],19],[28,13],[29],[29],[18,9],[18,9],[18,9],[18,9],[18,9],[18,9],[[],[[13,[30]]]],[13,[[13,[30]]]],[[],[[9,[18]]]],0,[18,31],[[]],[[]],[[],32],[[],32],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],0,0,[[]],[[]],[[]],[[]],[33,33],[12,12],[[]],[[]],[[],33],[[],[[7,[12]]]],[[33,3],4],[[12,3],4],[[]],[[]],[[]],[[]],0,[[],33],0,[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],0,[21,[[9,[36]]]],[[],13]],"p":[[3,"Command"],[3,"CliArgs"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"TypeId"],[3,"Bar"],[4,"ModuleConfig"],[6,"Result"],[4,"RenderedWidget"],[15,"bool"],[3,"GeneralConfig"],[3,"Config"],[8,"StdError"],[3,"Error"],[4,"ErrorKind"],[15,"str"],[3,"Global"],[3,"Box"],[4,"Cow"],[8,"Into"],[8,"Send"],[8,"Sync"],[8,"FnOnce"],[3,"Demand"],[8,"Error"],[3,"Source"],[3,"String"],[3,"Module"],[8,"Future"],[3,"Pin"],[3,"PathBuf"],[8,"ResultExt"],[8,"OptionExt"],[8,"ToSerdeError"],[13,"memory"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
